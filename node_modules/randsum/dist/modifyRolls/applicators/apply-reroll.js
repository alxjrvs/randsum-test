"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyReroll = void 0;
function rerollRoll(roll, _a, rollOne, index) {
    var greaterThan = _a.greaterThan, lessThan = _a.lessThan, exact = _a.exact, maxReroll = _a.maxReroll;
    if (index === void 0) { index = 0; }
    if (maxReroll === index) {
        return roll;
    }
    if (index === 99) {
        console.warn('You have rerolled 99 times, stopping reroll.');
        return roll;
    }
    switch (true) {
        case greaterThan !== undefined && roll > greaterThan:
        case lessThan !== undefined && roll < lessThan:
        case exact !== undefined && Array.isArray(exact) ? exact.includes(roll) : exact === roll:
            return rerollRoll(rollOne(), { greaterThan: greaterThan, lessThan: lessThan, exact: exact, maxReroll: maxReroll }, rollOne, index + 1);
        default:
            return roll;
    }
}
function applyReroll(rolls, reroll, rollOne) {
    var parameters = Array.isArray(reroll) ? reroll : [reroll];
    var rerollRolls = rolls;
    var _loop_1 = function (rerollModifier) {
        rerollRolls = rerollRolls.map(function (roll) {
            return rerollRoll(roll, rerollModifier, rollOne);
        });
    };
    for (var _i = 0, parameters_1 = parameters; _i < parameters_1.length; _i++) {
        var rerollModifier = parameters_1[_i];
        _loop_1(rerollModifier);
    }
    return rerollRolls;
}
exports.applyReroll = applyReroll;
//# sourceMappingURL=apply-reroll.js.map