"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyUnique = void 0;
function applyUnique(rollTotals, _a, rollOne) {
    var unique = _a.unique, rolls = _a.rolls, sides = _a.sides;
    if (rolls > sides) {
        throw new Error('You cannot have unique rolls when there are more rolls than sides of die.');
    }
    var notUnique = unique === undefined || typeof unique === 'boolean' ? [] : unique.notUnique.map(function (number) { return Number(number); });
    var filteredArray = new Set(rollTotals.filter(function (n) { return !notUnique.includes(Number(n)); }));
    var fixedRollTotals = rollTotals
        .map(function (number) { return Number(number); })
        .map(function (roll, index, array) {
        var newRoll;
        switch (true) {
            case array.indexOf(roll) === index:
            case notUnique.includes(roll):
                return roll;
            default:
                do {
                    newRoll = rollOne();
                } while (filteredArray.has(newRoll));
                return newRoll;
        }
    });
    return fixedRollTotals;
}
exports.applyUnique = applyUnique;
//# sourceMappingURL=apply-unique.js.map